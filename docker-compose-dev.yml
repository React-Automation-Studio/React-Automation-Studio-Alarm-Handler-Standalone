version: '3.2'
services:
  stagingfrontendserverdev:
    env_file: .env
    build:
      context: ./
      args: # Environment variables available at build-time
                - http_proxy
                - https_proxy
                - no_proxy
      dockerfile: docker/frontendserverDev/Dockerfile
    volumes:
      #- ${PWD}:/frontendserverAppDev
      #- iTlAsNodeModules:/frontendserverAppDev/node_modules
      - ./certificates:/certificates/
      - ./ReactApp/jsconfig.json:/frontendserverAppDev/jsconfig.json
      - ./ReactApp/package.json:/frontendserverAppDev/package.json
      - ./ReactApp/src/components:/frontendserverAppDev/src/components
      - ./ReactApp/src/App.js:/frontendserverAppDev/src/App.js
      - ./ReactApp/src/index.css:/frontendserverAppDev/src/index.css
      - ./ReactApp/src/index.js:/frontendserverAppDev/src/index.js
      - ./ReactApp/src/Main.js:/frontendserverAppDev/src/Main.js
      - ./ReactApp/src/routes.js:/frontendserverAppDev/src/routes.js
      - ./ReactApp/src/serviceWorker.js:/frontendserverAppDev/src/serviceWorker.js
      - ./submodules/React-Automation-Studio/src:/frontendserverAppDev/src/React-Automation-Studio/
      - ./ReactApp/public:/frontendserverAppDev/public
    restart: always
    network_mode: host
  stagingpvserver:
    env_file: .env
    build:
      context: ./
      args: # Environment variables available at build-time
                - http_proxy
                - https_proxy
                - no_proxy
      dockerfile: docker/pvserver/Dockerfile
    restart: always
    network_mode: host
    tty: true
    stdin_open: true
    volumes:
      - ./certificates:/certificates/
      - ./users:/pvServer/userAuthentication/users
  stagingunsecurestylguidepvserver:
    env_file: .env
    environment:
          - REACT_APP_PyEpicsServerPORT=5001
          - REACT_APP_EnableLogin=false

    build:
      context: ./
      args: # Environment variables available at build-time
                - http_proxy
                - https_proxy
                - no_proxy
      dockerfile: docker/pvserver/Dockerfile
    restart: always
    network_mode: host
    volumes:
      - ./certificates:/certificates/
  stagingdemoioc:
    build:
      context: ./
      args: # Environment variables available at build-time
                - http_proxy
                - https_proxy
                - no_proxy
      dockerfile: docker/demoioc/Dockerfile
    tty: true
    stdin_open: true
    restart: always
    network_mode: host
  styleguideserver:
    env_file: .env
    environment:
            - REACT_APP_PyEpicsServerPORT=5001
            - REACT_APP_EnableLogin=false

    build:
      context: ./
      args: # Environment variables available at build-time
                - http_proxy
                - https_proxy
                - no_proxy
      dockerfile: docker/styleguideserver/Dockerfile
    volumes:
      #- /app/styleguide
      #- iTlAsNodeModules:/app/node_modules
      #- iTlAsSgNodeModules:/styleguideServer/node_modules
      - ./certificates:/certificates/
    restart: always
    network_mode: host
  stagingtestioc:
      build:
        context: ./
        args: # Environment variables available at build-time
                  - http_proxy
                  - https_proxy
                  - no_proxy
        dockerfile: docker/stagingioc/Dockerfile
      tty: true
      stdin_open: true
      restart: always
      network_mode: host
